name: Build Release Binaries

on:  
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Compile
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p release
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o release/tana-${{ matrix.goos }}-${{ matrix.goarch }} ./...
      - name: Compile (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path release -Force
          $env:GOOS='${{ matrix.goos }}'; $env:GOARCH='${{ matrix.goarch }}'
          go build -o release\tana-${{ matrix.goos }}-${{ matrix.goarch }}.exe .

      - uses: actions/upload-artifact@v4
        with:
          name: tana-${{ matrix.goos }}-${{ matrix.goarch }}
          path: release/**
